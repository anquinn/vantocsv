#!/bin/sh
# Author: Andrew Quinn
# Last Modified August 27, 2017
# Converts VAN/liberalist PDF print files to CSV
# Program assumes you use $$ to deliminate newlines
# Requires pdftotext - availible in poppler package 
# run: brew install poppler
#
# Usage: vantocsv INPUT.pdf OUTPUT.csv

INPUT="$1"
OUTPUT="$2"
VERSION="1.0.0"

# Check if PDFTOTEXT is installed
if ! type "pdftotext" > /dev/null
	then
  		echo "\npdftotext is not installed"
  		echo "Install the poppler package to continue."
  		echo "The poppler package is availible in homebrew."
  		echo "run: brew install poppler\n"
  		exit
fi

# options
while test $# -gt 0; do
    case "$1" in
        -h|--help)
				echo " "
                echo "Converts VAN/Liberalist PDF print files to CSV"
                echo "accepts a PDF as input and a CSV filename to write to"
                echo " "
                echo "Usage: "
    			echo "  vantocsv INPUT.pdf OUTPUT.csv"
                echo " "
                echo "options:"
                echo "-h, --help			show brief help"
                echo "-v, --version			show version number"
                exit 0
                ;;
        -v|--version)
				echo "vantocsv version: $VERSION"
				exit 0
				;;
		*) 
				break
    esac
done

# make sure input and output are specified
if [ $# -eq 0 ]
  	then
    	echo "Usage: "
    	echo "  vantocsv INPUT.pdf OUTPUT.csv"
        echo " "
        echo "options:"
        echo "-h, --help			show brief help"
        echo "-v, --version			show version number"
    exit
fi

# make sure input is a PDF
if [[ "$INPUT" != *.pdf ]] && [[ "$INPUT" != *.PDF ]]
	then
		echo "Input file is not a PDF."
		exit
fi

# make sure output is a CSV
if [[ "$OUTPUT" != *.csv ]] && [[ "$OUTPUT" != *.CSV ]]
	then
		echo "Output file is not a CSV."
		exit
fi

# convert the PDF to CSV
# this assumes the newline is indicated with $$
# everything else should be comma separated
echo "Converting ${INPUT} to ${OUTPUT}."

if pdftotext -nopgbrk -raw "${INPUT}" "${OUTPUT}"
	then
		if sed -i '' -e ':a' -e 'N' -e '$!ba' -e 's/\n\$\$//g' -e 's/ , /,/g' "${OUTPUT}"
			then
				echo "Converted Successfully."
		else
			echo "Error. Exiting."
			exit
		fi
else
	echo "Error. Exiting."
	exit
fi